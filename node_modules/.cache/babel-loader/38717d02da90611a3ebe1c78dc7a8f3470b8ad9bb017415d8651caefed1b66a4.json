{"ast":null,"code":"var _jsxFileName = \"V:\\\\Vishwajeet\\\\Desktop\\\\Web Dev\\\\All codes\\\\Practice\\\\website 4\\\\musonic\\\\src\\\\Components\\\\MediaPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MediaPlayer(_ref) {\n  _s();\n  let {} = _ref;\n  // const toggleScreenMode = () => {\n  //   setScreenMode((prevMode) => (prevMode === \"full\" ? \"half\" : \"full\"));\n  // };\n  const {\n    title,\n    img,\n    musicid\n  } = useParams();\n  const [audio, setAudio] = useState(`https://musicapi.x007.workers.dev/fetch?id=${musicid}`);\n  useEffect(() => {\n    setAudio(`https://musicapi.x007.workers.dev/fetch?id=${musicid}`);\n    const audio = get;\n    audio.load(); // you must call this\n    setTimeout(function () {\n      console.log('audio src:', audio.currentSrc);\n    });\n  }, [title, img, musicid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mediaplayer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerImg\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://hls-server.vercel.app/img/${img}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: audio,\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: audio,\n          type: \"audio/mp3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MediaPlayer, \"ouZhVOvBBkA2HltUxlAEzlAGojc=\", false, function () {\n  return [useParams];\n});\n_c = MediaPlayer;\nvar _c;\n$RefreshReg$(_c, \"MediaPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","MediaPlayer","_ref","_s","title","img","musicid","audio","setAudio","get","load","setTimeout","console","log","currentSrc","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","controls","type","_c","$RefreshReg$"],"sources":["V:/Vishwajeet/Desktop/Web Dev/All codes/Practice/website 4/musonic/src/Components/MediaPlayer.js"],"sourcesContent":["import React, { useEffect, useRef,useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function MediaPlayer({}) {\n  // const toggleScreenMode = () => {\n  //   setScreenMode((prevMode) => (prevMode === \"full\" ? \"half\" : \"full\"));\n  // };\n  const { title, img, musicid } = useParams();\n  const [audio, setAudio] = useState(`https://musicapi.x007.workers.dev/fetch?id=${musicid}`)\n  useEffect(() => {\n    setAudio(`https://musicapi.x007.workers.dev/fetch?id=${musicid}`)\n    const audio = get\n      audio.load(); // you must call this\n      setTimeout(function(){console.log('audio src:', audio.currentSrc)});\n  }, [title,img, musicid]);\n\n  return (\n    <>\n      <div className=\"mediaplayer\">\n        <div className=\"playerImg\">\n          <img src={`https://hls-server.vercel.app/img/${img}`} alt=\"\" />\n          <h1>{title}</h1>\n        </div>\n        <audio id={audio} controls>\n          <source src={audio} type=\"audio/mp3\" />\n        </audio>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAACC,QAAQ,QAAQ,OAAO;AACzD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAK;EAAAC,EAAA;EAAA,IAAJ,CAAC,CAAC,GAAAD,IAAA;EACpC;EACA;EACA;EACA,MAAM;IAAEE,KAAK;IAAEC,GAAG;IAAEC;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC3C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAE,8CAA6CW,OAAQ,EAAC,CAAC;EAC3Fb,SAAS,CAAC,MAAM;IACde,QAAQ,CAAE,8CAA6CF,OAAQ,EAAC,CAAC;IACjE,MAAMC,KAAK,GAAGE,GAAG;IACfF,KAAK,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IACdC,UAAU,CAAC,YAAU;MAACC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEN,KAAK,CAACO,UAAU,CAAC;IAAA,CAAC,CAAC;EACvE,CAAC,EAAE,CAACV,KAAK,EAACC,GAAG,EAAEC,OAAO,CAAC,CAAC;EAExB,oBACER,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC1BjB,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxBjB,OAAA;UAAKmB,GAAG,EAAG,qCAAoCZ,GAAI,EAAE;UAACa,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/DxB,OAAA;UAAAiB,QAAA,EAAKX;QAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACNxB,OAAA;QAAOyB,EAAE,EAAEhB,KAAM;QAACiB,QAAQ;QAAAT,QAAA,eACxBjB,OAAA;UAAQmB,GAAG,EAAEV,KAAM;UAACkB,IAAI,EAAC;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACN,CAAC;AAEP;AAACnB,EAAA,CA1BuBF,WAAW;EAAA,QAIDL,SAAS;AAAA;AAAA8B,EAAA,GAJnBzB,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}