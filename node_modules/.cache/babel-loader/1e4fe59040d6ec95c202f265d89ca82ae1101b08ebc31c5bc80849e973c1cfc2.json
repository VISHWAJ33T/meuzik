{"ast":null,"code":"var _jsxFileName = \"V:\\\\Vishwajeet\\\\Desktop\\\\Web Dev\\\\All codes\\\\Practice\\\\website 4\\\\musonic\\\\src\\\\Components\\\\MediaPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MediaPlayer(_ref) {\n  _s();\n  let {} = _ref;\n  // const toggleScreenMode = () => {\n  //   setScreenMode((prevMode) => (prevMode === \"full\" ? \"half\" : \"full\"));\n  // };\n  const {\n    title,\n    img,\n    musicid\n  } = useParams();\n  let audio = useRef();\n  // start the audio (using the .current property of the ref we just created) when the component mounts using the useEffect hook\n  useEffect(() => {\n    audio.current = new Audio(`https://musicapi.x007.workers.dev/fetch?id=${musicid}`);\n    audio.current.play();\n  }, [musicid, title, img]);\n  useEffect(() => {\n    return () => {\n      audio.current.pause();\n      console.log(\"in cleanup\");\n    };\n  }, [musicid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mediaplayer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerImg\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://hls-server.vercel.app/img/${img}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: audio,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MediaPlayer, \"u2s3MNp6njxX5EDTNQCQCvRU+HI=\", false, function () {\n  return [useParams];\n});\n_c = MediaPlayer;\nvar _c;\n$RefreshReg$(_c, \"MediaPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","MediaPlayer","_ref","_s","title","img","musicid","audio","current","Audio","play","pause","console","log","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","controls","type","_c","$RefreshReg$"],"sources":["V:/Vishwajeet/Desktop/Web Dev/All codes/Practice/website 4/musonic/src/Components/MediaPlayer.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function MediaPlayer({}) {\n  // const toggleScreenMode = () => {\n  //   setScreenMode((prevMode) => (prevMode === \"full\" ? \"half\" : \"full\"));\n  // };\n  const { title, img, musicid } = useParams();\n  let audio = useRef();\n  // start the audio (using the .current property of the ref we just created) when the component mounts using the useEffect hook\n  useEffect(() => {\n    audio.current = new Audio(\n      `https://musicapi.x007.workers.dev/fetch?id=${musicid}`\n    );\n    audio.current.play();\n  }, [musicid,title,img]);\n  \n  useEffect(() => {\n    return () => {\n      audio.current.pause();\n      console.log(\"in cleanup\");\n    };\n  }, [musicid]);\n\n  return (\n    <>\n      <div className=\"mediaplayer\">\n        <div className=\"playerImg\">\n          <img src={`https://hls-server.vercel.app/img/${img}`} alt=\"\" />\n          <h1>{title}</h1>\n        </div>\n        {/* <iframe\n          src={`https://musicapi.x007.workers.dev/fetch?id=${musicid}`\n          }\n          width=\"50%\"\n          height=\"50%\"\n        ></iframe> */}\n        <audio controls>\n          <source src={audio} type=\"audio/mpeg\" />\n        </audio>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAK;EAAAC,EAAA;EAAA,IAAJ,CAAC,CAAC,GAAAD,IAAA;EACpC;EACA;EACA;EACA,MAAM;IAAEE,KAAK;IAAEC,GAAG;IAAEC;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC3C,IAAIW,KAAK,GAAGZ,MAAM,CAAC,CAAC;EACpB;EACAD,SAAS,CAAC,MAAM;IACda,KAAK,CAACC,OAAO,GAAG,IAAIC,KAAK,CACtB,8CAA6CH,OAAQ,EACxD,CAAC;IACDC,KAAK,CAACC,OAAO,CAACE,IAAI,CAAC,CAAC;EACtB,CAAC,EAAE,CAACJ,OAAO,EAACF,KAAK,EAACC,GAAG,CAAC,CAAC;EAEvBX,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXa,KAAK,CAACC,OAAO,CAACG,KAAK,CAAC,CAAC;MACrBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb,oBACER,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC1BhB,OAAA;QAAKiB,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxBhB,OAAA;UAAKkB,GAAG,EAAG,qCAAoCX,GAAI,EAAE;UAACY,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/DvB,OAAA;UAAAgB,QAAA,EAAKV;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eAONvB,OAAA;QAAOwB,QAAQ;QAAAR,QAAA,eACbhB,OAAA;UAAQkB,GAAG,EAAET,KAAM;UAACgB,IAAI,EAAC;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACN,CAAC;AAEP;AAAClB,EAAA,CAxCuBF,WAAW;EAAA,QAIDL,SAAS;AAAA;AAAA4B,EAAA,GAJnBvB,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}